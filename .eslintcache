[{"C:\\Users\\Jeff's PC\\projects\\portfolio2022\\src\\index.js":"1","C:\\Users\\Jeff's PC\\projects\\portfolio2022\\src\\App.js":"2","C:\\Users\\Jeff's PC\\projects\\portfolio2022\\src\\components\\contact\\Contact.jsx":"3","C:\\Users\\Jeff's PC\\projects\\portfolio2022\\src\\components\\topbar\\Topbar.jsx":"4","C:\\Users\\Jeff's PC\\projects\\portfolio2022\\src\\components\\testimonials\\Testimonials.jsx":"5","C:\\Users\\Jeff's PC\\projects\\portfolio2022\\src\\components\\intro\\Intro.jsx":"6","C:\\Users\\Jeff's PC\\projects\\portfolio2022\\src\\components\\portfolio\\Portfolio.jsx":"7","C:\\Users\\Jeff's PC\\projects\\portfolio2022\\src\\components\\works\\Works.jsx":"8","C:\\Users\\Jeff's PC\\projects\\portfolio2022\\src\\menu\\Menu.jsx":"9","C:\\Users\\Jeff's PC\\projects\\portfolio2022\\src\\components\\portfolioList\\PortfolioList.jsx":"10","C:\\Users\\Jeff's PC\\projects\\portfolio2022\\src\\data.js":"11"},{"size":209,"mtime":1638559475866,"results":"12","hashOfConfig":"13"},{"size":856,"mtime":1638570568388,"results":"14","hashOfConfig":"13"},{"size":876,"mtime":1638818645353,"results":"15","hashOfConfig":"13"},{"size":1167,"mtime":1638566099927,"results":"16","hashOfConfig":"13"},{"size":2800,"mtime":1638925632185,"results":"17","hashOfConfig":"13"},{"size":1195,"mtime":1638724885693,"results":"18","hashOfConfig":"13"},{"size":2139,"mtime":1638989298453,"results":"19","hashOfConfig":"13"},{"size":2435,"mtime":1638927964410,"results":"20","hashOfConfig":"13"},{"size":889,"mtime":1638570568390,"results":"21","hashOfConfig":"13"},{"size":333,"mtime":1638980934807,"results":"22","hashOfConfig":"13"},{"size":1108,"mtime":1638989795269,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"jdstn0",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Jeff's PC\\projects\\portfolio2022\\src\\index.js",[],["51","52"],"C:\\Users\\Jeff's PC\\projects\\portfolio2022\\src\\App.js",["53"],"import Contact from './components/contact/Contact'\r\nimport Testimonials from './components/testimonials/Testimonials';\r\nimport Intro from './components/intro/Intro'; \r\nimport Portfolio from './components/portfolio/Portfolio';\r\nimport Topbar from './components/topbar/Topbar';\r\nimport Works from './components/works/Works';\r\nimport Menu from './menu/Menu';\r\nimport \"./app.scss\"\r\nimport react, {useState} from 'react'\r\n\r\nfunction App() {\r\n  const [menuOpen, setMenuOpen] = useState(false)\r\n  return (\r\n    <div className=\"app\">\r\n      <Topbar menuOpen={menuOpen} setMenuOpen={setMenuOpen}/>\r\n      <Menu menuOpen={menuOpen} setMenuOpen={setMenuOpen}/>\r\n      <div className=\"sections\">\r\n          <Intro/>\r\n          <Portfolio/>\r\n          <Works/>\r\n          <Testimonials/>\r\n          <Contact/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Jeff's PC\\projects\\portfolio2022\\src\\components\\contact\\Contact.jsx",[],"C:\\Users\\Jeff's PC\\projects\\portfolio2022\\src\\components\\topbar\\Topbar.jsx",[],"C:\\Users\\Jeff's PC\\projects\\portfolio2022\\src\\components\\testimonials\\Testimonials.jsx",[],"C:\\Users\\Jeff's PC\\projects\\portfolio2022\\src\\components\\intro\\Intro.jsx",["54"],"import \"./Intro.scss\"\r\nimport React, { useEffect, useRef } from 'react'\r\nimport { init } from 'ityped'\r\n\r\nfunction Intro() {\r\n    const textRef = useRef(); \r\n\r\n    useEffect(() => {\r\n        init(textRef.current, {\r\n            showCursor: true, \r\n            strings: [\"Developer\", \"Creator\", \"Digital Explorer\", \"Problem Solver\", \"Wicked Smart Guy\"], \r\n            typeSpeed: 150, \r\n            backDelay: 900, \r\n            backSpeed: 60, \r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div className='intro' id='intro'>\r\n           <div className=\"left\">\r\n               <div className=\"imgContainer\">\r\n                   <img src=\"assets/cat.png\" alt=\"a photo of jeff\"/>\r\n               </div>\r\n           </div>\r\n           <div className=\"right\">\r\n                <div className=\"wrapper\">\r\n                    <h2>Hi there, I'm</h2>\r\n                    <h1>Jeff Woltjen</h1>\r\n                    <h3>Freelance <span ref={textRef}></span></h3>\r\n                </div>\r\n                <a href=\"#portfolio\">\r\n                    <img src=\"assets/down.png\" alt=\"a downward directional arrow\"/>\r\n                </a>\r\n           </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Intro\r\n","C:\\Users\\Jeff's PC\\projects\\portfolio2022\\src\\components\\portfolio\\Portfolio.jsx",["55"],"import \"./Portfolio.scss\"\r\nimport {useEffect, useState} from 'react'\r\nimport PortfolioList from \"../portfolioList/PortfolioList\";\r\nimport {nightAtTheMovies, catter, neumann} from '../../data'; \r\n\r\nfunction Portfolio() {\r\n    const [selected, setSelected] = useState(\"neumann\")\r\n    const [data, setData] = useState([])\r\n    const list = [\r\n        {\r\n            id: \"nightAtTheMovies\", \r\n            title: \"Night at the Movies\", \r\n        }, \r\n        {\r\n            id: \"neumann\", \r\n            title: \"Neumann\", \r\n        }, \r\n        {\r\n            id: \"quizApp\", \r\n            title: \"Quiz App\", \r\n        }, \r\n        {\r\n            id: \"catter\", \r\n            title: \"Catter\"\r\n        }, \r\n       \r\n    ]\r\n\r\n    useEffect(() => {\r\n        switch(selected){\r\n                case \"nightAtTheMovies\":\r\n                setData(nightAtTheMovies); \r\n                break;\r\n                case \"neumann\":\r\n                setData(neumann); \r\n                break;\r\n                case \"catter\":\r\n                setData(catter); \r\n                break;\r\n                default:\r\n                setData(nightAtTheMovies)\r\n        }\r\n    }, [selected])\r\n\r\n    return (\r\n        <div className=\"portfolio\" id=\"portfolio\">\r\n            <h1>Portfolio</h1>\r\n            <ul>\r\n              {list.map(item => (\r\n                  <PortfolioList \r\n                        title={item.title} \r\n                        key={item.id} \r\n                        active={selected === item.id} \r\n                        setSelected={setSelected}\r\n                        id={item.id}\r\n                />\r\n              ))}  \r\n            </ul>\r\n            <div className=\"container\">\r\n                {data.map(project => (\r\n                    <div className=\"item\">\r\n                        <h3>{project.title}</h3>\r\n                        <img src={project.img} />\r\n                        <p>{project.desc}\r\n                        <ul>{project.tech.map(tag => (<li>{tag}</li>))}</ul>\r\n                        </p>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Portfolio\r\n","C:\\Users\\Jeff's PC\\projects\\portfolio2022\\src\\components\\works\\Works.jsx",["56"],"import \"./Works.scss\"\r\nimport {useState} from 'react' \r\n\r\n\r\nfunction Works() {\r\n   const [currentSlide, setCurrentSlide] = useState(0); \r\n   const data = [\r\n    {\r\n        id: \"nightAtTheMovies\", \r\n        title: \"Night at the Movies\", \r\n        img: \"assets/movies.jpg\", \r\n        desc: \"A single page application that allows users to search for movies and shows.\", \r\n        tech: [\"Redux Toolkit\", \"React Router\", 'Styled Components']\r\n    },\r\n    {\r\n        id: \"neumann\", \r\n        title: \"Neumann\", \r\n        img: \"assets/neumann.jpg\", \r\n        desc: \"A MERN application that plays philosophical aphorisms from a database.\", \r\n        tech: [\"tbd\", \"tbd\", 'tbd']\r\n    },\r\n    {\r\n        id: \"catter\", \r\n        title: \"Catter\",\r\n        img: \"assets/cat.png\", \r\n        desc: \"A SPA that lets users search for cats and vote on them.\", \r\n        tech: [\"Redux Toolkit\"]\r\n    }\r\n   ]\r\n\r\n   const handleClick = (direction) => {\r\n     direction === 'left' \r\n        ? setCurrentSlide(currentSlide > 0 ? currentSlide-1 : data.length-1) \r\n        : setCurrentSlide(currentSlide < data.length -1 ? currentSlide + 1 : 0)\r\n   }\r\n\r\n\r\n    return (\r\n        <div className=\"works\" id=\"works\">\r\n            <div className=\"slider\" style={{transform: `translateX(-${currentSlide * 100}vw)`}}>\r\n                {data.map(item => (\r\n                    <div className=\"container\">\r\n                    <div className=\"item\">\r\n                        <div className=\"left\">\r\n                            <div className=\"leftContainer\">\r\n                                <div className=\"imgContainer\">\r\n                                    <img src=\"assets/mobile.png\" alt=\"a picture of a mobile icon\"/>\r\n                                </div>\r\n                                <h2>{item.title}</h2>\r\n                                <p>{item.desc} </p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"right\">\r\n                            <img src={item.img} alt=\"\"/>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <img src=\"assets/arrow.png\" className=\"arrow left\" alt=\"left arrow icon\" onClick={()=>handleClick('left')}/>\r\n            <img src=\"assets/arrow.png\" className=\"arrow right\" alt=\"right arrow icon\" onClick={()=>handleClick()}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Works\r\n","C:\\Users\\Jeff's PC\\projects\\portfolio2022\\src\\menu\\Menu.jsx",[],"C:\\Users\\Jeff's PC\\projects\\portfolio2022\\src\\components\\portfolioList\\PortfolioList.jsx",[],"C:\\Users\\Jeff's PC\\projects\\portfolio2022\\src\\data.js",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":9,"column":8,"nodeType":"63","messageId":"64","endLine":9,"endColumn":13},{"ruleId":"65","severity":1,"message":"66","line":22,"column":20,"nodeType":"67","endLine":22,"endColumn":69},{"ruleId":"68","severity":1,"message":"69","line":63,"column":25,"nodeType":"67","endLine":63,"endColumn":50},{"ruleId":"65","severity":1,"message":"66","line":47,"column":37,"nodeType":"67","endLine":47,"endColumn":100},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"no-unused-vars","'react' is defined but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]